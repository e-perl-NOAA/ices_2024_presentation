---
format: 
  revealjs:
    pagetitle: "ICES 2024 Presentation"
    theme: [default,style.scss]
revealjs-plugins:
  - highlightword
---

## How do fisheries scientists develop software well? {.title}

<h3>Lessons learned from the ADMB shutdown</h3>
  
<h3>[Elizabeth Perl](mailto:elizabeth.gugliotti@noaa.gov)</h3> <h5>ECS, NOAA Fisheries</h5> <br>
<h4>[Andrea Havron](mailto:andrea.havron@noaa.gov)</h4> <h5>NOAA Fisheries</h5> <br>
<h4>[Ian Taylor](mailto:ian.taylor@noaa.gov)</h4> <h5>NOAA Fisheries</h5> <br>

![](fish_laptop.png){.absolute left=375 top=190 width="600"}
---

## What I went to school for:

::: columns
::: {.column width="33.3%"}
![](dive_square.png){width="300" height="275"} ![](turtle.png){width="300" height="275"}
:::

::: {.column width="33.3%"}
![](rov.png){width="300" height="275"} ![](sub.png){width="300" height="275"}
:::

::: {.column width="33.3%"}
![](rov_drive.png){width="300" height="275"} ![](dive_fun.png){width="300" height="275"}
:::
:::

::: {.notes}
Maybe like many of you, this is what I went to school for.
:::

---

## What I do now:

![](mitchell-luo-FWoq_ldWlNQ-unsplash.jpg){width="500" height="450"}
![](RStudio.png){width="500" height="450"}


. . .

::: {.r-stack}
ðŸ˜±ðŸ˜«ðŸ¤¬
:::


::: {.notes}
But now we find ourselves in spaces that look more like this (with a lot of 
frustration).
:::

---

## Can we build it? Yes we can!


![](Bob_the_builder.png){.absolute top=380}
`ggplot(data)`{.absolute style="top:85%; left:55%; transform:rotate(38deg);"}
`x = numpy.array([0,1,2,3,4,5])`{.absolute style="color:#76BC21; font-size:22px; top:82%; left:22%; transform:rotate(-35deg);"}
`git fetch --tags`{.absolute style="color:#007582; font-size:30px; top:70%; left:70%; transform:rotate(-20deg);"}
`mv file newfile`{.absolute style="color:#0085CA; font-size:25px; top:90%; left:80%; transform:rotate(5deg);"}
`docker pull rocker/rstudio`{.absolute style="color:#0085CA; font-size:35px; top:45%; left:45%; transform:rotate(-10deg);"}
`if(i=10) biasadj(i);`{.absolute style="color:#D97146; font-size:25px; top:60%; left:20%; transform:rotate(20deg);"}
`sum_new <- function(x,y){x+y}`{.absolute style="color:#D02C2F; font-size:18px; top:55%; left:75%; transform:rotate(15deg);"}
`function(x) x/12`{.absolute style="color:#76BC21; font-size:45px; top:40%; left:10%;"}
`chmod a+x file`{.absolute style="color:#D97146; font-size:30px; top:15%; left:77%;transform:rotate(20deg);"}
`install_github("pkg/pkgname")`{.absolute style="font-size:20px; top:18%; left:30%; transform:rotate(15deg);"}
`h3 {font-size: 25}`{.absolute style="color:#007582; font-size:30px; top:25%; left:50%;transform:rotate(-35deg);"}
`import numpy as np`{.absolute style="color:#D02C2F; font-size:35px; top:95%; left:37%;"}
`<div class="navbar">`{.absolute style="color:#D02C2F; font-size:20px; top:30%; left:70%;"}
`\bibliographystyle{JournalBiblio/cjfas}`{.absolute style="color:#007582; font-size:20px; top:32%; left:0%;transform:rotate(-15deg);"}
`<li><p>text</p></li>`{.absolute style="color:#007582; font-size:30px; top:18%; left:2%;"}
`echo "text"`{.absolute style="color:#0085CA; font-size:18px; top:75%; left:25%;"}



::: {.notes}
A lot of times out of necessity because there is no money to get someone to 
create tools, packages, programs, etc. for us, so we build it ourselves.
:::

---

## For the most part, we do pretty well!


![](https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png){.absolute top=125 width="300"}
![](Github-logo.png){.absolute left=410 width="215"}
![](Docker.png){.absolute left=760 width="230"}

![](Python-Logo.png){.absolute top=350 width="315"}

![](Kubernetes-Logo.png){.absolute left=375 top=320 width="300"}

![](Jupyter_logo.svg.png){.absolute left=785 top=295 width="175"}

![](code-stable.png){.absolute top=505 left=70 width="175"}

![](singularity-logo.png){.absolute left=425 top=500 width="200"}

![](Microsoft_Azure_Logo.svg.png){.absolute top=550 left=730 width="280"}



::: {.notes}
We have embraced tools like RStudio, Jupyter, GitHub, Docker, .
:::

---

## HOWEVER

We still lack the knowledge, funding, or time to do:

- Unit tests/testing
- Documentation
- Open-source code management
- Long-term maintenance
- Sun-setting

And we suffer the consequences...

---

## Sun-setting of ADMB

- [ADMB](https://www.admb-project.org/): automatic differentiation (AD) application used to build stock assessment models
  - Stock Synthesis (SS3)
  - Beaufort Assessment Model (BAM)
  - General Model for Assessing Crustacean Stocks (GMACs)
- ADMB funding ran out March 2024
- ADMB Foundation meeting March 7th, 2024 to discuss final steps for orderly shutdown:
  - Final release of ADMB 13.2
  - Docker image of ADMB
  - No new feature development as sole developer leaves
  - Bug fixes???
  
Not the example that we want to follow

---

## Improving software maintenance
  - Clear documentation of the code base, equations, and architecture, including inline comments, README files, comprehensive user manuals, and tutorials for easy understanding and troubleshooting. 
  - Version control
  - Automated testing (unit, integration, end-to-end)
  - Regular code review
  - CI/CD
  - Engage in continuous learning, user feedback, and support
  
(https://www.simform.com/blog/software-maintenance/)

---

## Fostering developer and user communities
- These are fundamental to thriving software communities
- An established developer community can be a useful way support and maintain software after it has been phased out and/or the main developer(s) is/are retiring or moving on to another position

- Ways to build a strong developer community
  - Chat platform
  - Active developer forums
  - Take advantage of open source
  - Recurring office hours
  - Developer events
  - Example: [GitHub community](https://github.com/orgs/community/discussions/)

## Creating software development teams that have diverse expertise
- Software development is complex and involves many skills such as:
  - coding
  - design & UI/UX
  - project management
  - statistics
  - mathematics
  - AI
  - cloud computing
  - computer science
  - systems architecture and administration
  - subject matter expertise (population dynamics, MSE, etc.)
  
- We should be incorporating people with expertise in these skills into our software development projects to help ensure that all aspects of the project are considered, which can lead to more well-rounded software products

---

## Planning

---

## Application to other softwares

- SS3
- TMB
- FIMS
