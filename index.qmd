---
format: 
  revealjs:
    pagetitle: "ICES 2024 Presentation"
    theme: [default,style.scss]
revealjs-plugins:
  - highlightword
from: markdown+emoji
---

## How do fisheries scientists develop software well? {.title style="font-size:110%"}

<h3>Lessons learned from the ADMB shutdown</h3>

<h3>[Elizabeth Perl](mailto:elizabeth.gugliotti@noaa.gov)</h3> <h5>ECS, NOAA Fisheries</h5> <br>
<h4>[Andrea Havron](mailto:andrea.havron@noaa.gov)</h4> <h5>NOAA Fisheries</h5> <br>
<h4>[Ian Taylor](mailto:ian.taylor@noaa.gov)</h4> <h5>NOAA Fisheries</h5> <br>
<br>
<br>
<h6><br><br><br>ICES ASC 2024</h6>

![](images/fish_laptop.png){.absolute left=490 top=185 width="560"}


![](images/noaa-fisheries.png){.absolute left=860 top=505 width="60"}


::: footer
https://e-perl-noaa.github.io/ices_2024_presentation
:::

---

## 

:::{.absolute left=625 top=80 style="color: #0d1b34; font-size: 150%; font-weight: bold;"}
What I was trained to do...
:::

![](images/rockfish.JPG){.absolute left=-10 top=-20 width="400"}
![](images/dive_square.png){.absolute left=90 top=335 width="300"}
![](images/rov.png){.absolute left=405 top=260 width="475"} 
![](images/rov_drive.png){.absolute left=405 top=60 width="185"}

::: {.notes}
Maybe like many of you, this is what I was trained to do.
:::

---

## {.color-slide background-image="images/coding.jpg" background-size=300}

:::{.absolute top=550 left=625 style="font-size:150%; font-weight: bold; color: #d8e8e9;"}
What I do now...
:::

::: {.notes}
And like myself, you may find yourself sitting at a computer staring more at code than going out into the field. While we all call ourselves scientists, we end up spend a lot of time developing software, models, tools, etc.
:::

---


## For the most part, we do pretty well!

![](images/RStudio_logo.png){.absolute top=125 width="300"}
![](images/GitHub-logo.png){.absolute left=410 width="215" .fragment}

![](images/Docker.png){.absolute left=760 width="230" .fragment}

![](images/Python-Logo.png){.absolute top=350 width="315" .fragment}

![](images/Kubernetes-Logo.png){.absolute left=375 top=320 width="300" .fragment}

![](images/Jupyter_logo.svg.png){.absolute left=785 top=295 width="175" .fragment}

![](images/code-stable.png){.absolute top=505 left=70 width="175" .fragment}

![](images/singularity-logo.png){.absolute left=425 top=500 width="200" .fragment}

![](images/Microsoft_Azure_Logo.svg.png){.absolute top=550 left=730 width="280" .fragment}



::: {.notes}
And for the most part, we do pretty well. We have embraced open-source tools like RStudio, Jupyter, GitHub, Docker, and more. Teaching ourselves how to code, use containers, employ version control, take advantage of cloud computing, and so much more. AND we have found ways to do it with few resources and with little official training.
:::

---

## However, we aren't (truly) software developers

- Scientists develop software and models fundamentally different than software developers/engineers^1^

::: {.fragment fragment-index=1}
- We are criticized for lacking adequate:

  :::: {.columns}
  
  ::: {.column width="40%" .nopad}
    - Unit tests
    - Documentation
  :::
  
  ::: {.column width="60%" .nopad}
    - Open-source code management
    - Long-term maintenance
  :::
  
  ::::

:::

::: {style="color: #007582; font-weight:bold; margin-top:-3%; margin-bottom:0%" .fragment fragment-index=2}
Largely because we lack the time, money, and expertise
:::

::: {style="text-align: right; margin-bottom:-3%" .fragment fragment-index=3}
But, we suffer the consequences...
:::

::: {style="font-size: 10%"}
<br>
:::

::: {style="font-size: 40%"}
^1^ Kelly D (2015). Scientific software development viewed as knowledge acquisition: Towards understanding the development of risk-averse scientific software. *J. Syst. Softw.*. **109**, 50-61. <https://doi.org/10.1016/j.jss.2015.07.027>
:::

::: {.notes}
This process is more organic and mostly done as time allows to meet our needs. For the most part, none of us are paid to develop scientific software.
:::

---

## Example: Shutdown of ADMB
![](images/ADMB_logo.png){.absolute top=-25 left=725 width="300"}

:::{.nopad}
:::{.fragment fragment-index=1}
- [ADMB](https://www.admb-project.org/): automatic differentiation (AD) application used to build stock assessment models

  :::{.fragment .fade-out fragment-index=2}
   - Stock Synthesis (SS3)
   - Beaufort Assessment Model (BAM)
   - General Model for Assessing Crustacean Stocks (GMACs)
  :::

:::

:::{.fragment fragment-index=2 .absolute top=190}
- ADMB funding ended March 2024
:::

:::{.fragment fragment-index=3 .absolute top=240}
- March 2024 ADMB Foundation meeting to discuss orderly shutdown:
  - Final release of ADMB 13.2 March 15, 2024
  - Docker image of ADMB 
  - No new feature development as sole developer leaves
  - Bug fixes and user group support?
:::

:::


::: {.notes}
The docker image of admb was an attempt to provide future stability.
:::

---

## Downstream problems

:::: {.columns style="font-size:95%;"}

::: {.column width="47%" .nopad}
- Building ADMB
  - Build locally
    - Most users do this
    - Eventual library mismatches will make this impossible
    
  :::{.fragment fragment-index=1}
  - Building from docker images:
    - Steep learning curve
    - Works...for now
  :::
  
:::

::: {.column width="53%" .nopad}

::: {.fragment fragment-index=2}
- No plan for bug fixes
  - No one to implement fixes
  - No documentation on how to release after a bug fix
:::

::: {.fragment fragment-index=3}
- User group
  - Slow responses by select few
  - Few people with inside-out knowledge of ADMB
:::

:::

::::

::: {data-id="box1" style="background:rgba(216, 232, 233, 0.8); width:1200px; height:700px;" .absolute top=0 left=0 .fragment fragment-index=4}
:::

:::{style="color: #007582; font-size:125%; font-weight:bold;" .absolute bottom=-20 left=10 .fragment fragment-index=4}
How do we maintain our models well when a major dependency no longer has support?
:::

::: {.notes}
- Trying to build models using ADMB will eventually require users to have a greater amount of computer and software knowledge
- There are still stock assessment models that heavily depend on ADMB and there was little planning on how phase out ADMB while ensuring dependent models would be unaffected
:::

---

## 
::: {.fullslide-text .flow}
How do we develop stable scientific software?
:::
::: {style="color: #007582; font-weight: bold; font-size: 150%"}
For fisheries science and beyond.
:::

::: {.notes}
How do we (as fisheries scientists) develop scientific software that is more stable and resistant to changes.
:::

---

## Improve software maintenance^2^
:::{.nopad style="font-size:99%"}
  - Software maintenance plans
  - Clear documentation and <br> user manuals/tutorials
  - Version control
  - Automated testing and CI/CD
  - Working groups to support <br>
    reproducible research^3^
  - Encourage continuous <br>
    learning for the development team^3^
:::

![](images/software_maintenance_transparent.png){.absolute top=150 left=525 width="520"}

::: {style="font-size: 40%; margin-bottom:-3%; margin-top:-3%"}
<br>
<br>
<br>
<br>

^2^ https://www.simform.com/blog/software-maintenance/

^3^ Thimbleby H (2024). Improving Science That Uses Code. *Comput. J.* **67(4)**, 1381â€“1404. https://doi.org/10.1093/comjnl/bxad067
:::


::: {.notes}
Software maintenance plans help keep software up with changing needs and adapt to new technologies and help enhance the efficiency of the product.

Clear documentation of the code base (including intent), equations, and architecture, including inline comments, README files, comprehensive user manuals, and tutorials for easy understanding and troubleshooting. 

Testing: unit, integration, end-to-end
:::

---

![](images/friends_plan.jpg){fig-align="center" height="700"}

---

## Foster developer and user communities {style="font-size=60%"}

:::{.nopad}
- Fundamental to thriving software communities
- Useful way support and maintain software after it has been phased out and/or the maintainer changes
- Ways to build a strong developer community:
  - Chat platform :speech_balloon:
  - Active developer forums :raised_hand:
  - Take advantage of open source :computer:
  - Recurring office hours :office:
  - Developer events & trainings :circus_tent:
:::

---

## Create software development teams with diverse expertise

- Software development is complex and involves the skills of people with various expertise

  :::: {.columns}
  
  ::: {.column width="48%" .nopad}
    - coding
    - design & UI/UX
    - project management
    - statistics/statistical
      computing
    - mathematics
    - AI & ML
  :::
  
  ::: {.column width="52%" .nopad}
    - cloud computing
    - data science
    - software engineering^3^
    - systems architecture and 
      administration
    - subject matter expertise 
      (population dynamics, 
      MSE, etc.)
  :::
  
  ::::

::: {.notes}
- We should be incorporating people with expertise in these skills into our software development projects to...
:::

---

## Create software development teams with diverse expertise

- Software development is complex and involves the skills of people with various expertise
- Ensure all aspects of the project are considered
  - More well-rounded software products
  - Long-term stability of the software
- Better adaptability/capacity for change 
  - Incorporate new technologies and methods quickly

---


##

::: {style="color:#007582; font-size:150%; font-weight:bold"}
Sure this is a great idea and all...
:::

![](images/runner.png){.absolute top=100 left=240 width="420" .fragment fragment-index=1}

::: {style="color:#007582; font-size:150%; font-weight:bold;" .absolute left=375 top=550 .fragment fragment-index=1}
but there are so many hurdles to make it happen
:::

---

## Low-hanging fruit

![](images/apple_tree.png){.absolute top=10 left=515 width="550"}

- Software maintenance
  - Developing software <br>
    maintenance plans
  - Clear documentation, <br>
    tutorials, and trainings
  - Using version control
- Building software development <br>
  **and** user communities


![](images/fruit_basket.png){.absolute top=500 left=415 width="175" .fragment fragment-index=1}
![](images/fruit_basket.png){.absolute top=460 left=580 width="175" .fragment fragment-index=2}
![](images/fruit_basket.png){.absolute top=490 left=810 width="175" .fragment fragment-index=3}

::: {.absolute top=625 left=470 style="font-weight:bold;" .fragment fragment-index=1}
SS3
:::

:::{.absolute top=585 left=630 style="font-weight:bold;" .fragment fragment-index=2}
TMB
:::

:::{.absolute top=615 left=860 style="font-weight:bold;" .fragment fragment-index=3}
FIMS
:::

::: {.notes}
Short, conscise tutorials are generally best for learning.
:::

---

## {.color-slide background-image="images/team.png" background-size=500px background-opacity=0.4}

::: {style="font-size: 300%; color: #007582; font-weight: bold; text-align: center; padding:150px"}
Let's tackle this together!
:::
  
::: footer
https://e-perl-noaa.github.io/ices_2024_presentation
:::

::: {.notes}
Code should be developed in a professional, rigorous, and supportive environment that facilitates quality science with clear presentation and appropriately rigorous scrutiny. 
:::

---

## Software Maintenance Plan Templates

{{< pdf images/maintenance_plan_template.pdf width=100% height=600 >}}

::: {style="font-size: 49%"}
https://images.techstreet.com/direct/SWM_samples.pdf
:::

---

## Software Maintenance Plan Templates

{{< pdf images/software-development-maintenance-plan.pdf width=100% height=600 >}}

---

## Can we build it? Yes we can! {visibility="hidden"}

![](images/Bob_the_builder.png){.absolute top=380}
`ggplot(data)`{.absolute style="top:85%; left:55%; transform:rotate(38deg);"}
`x = numpy.array([0,1,2,3,4,5])`{.absolute style="color:#76BC21; font-size:22px; top:82%; left:22%; transform:rotate(-35deg);"}
`git fetch --tags`{.absolute style="color:#007582; font-size:30px; top:70%; left:70%; transform:rotate(-20deg);"}
`mv file newfile`{.absolute style="color:#0085CA; font-size:25px; top:90%; left:80%; transform:rotate(5deg);"}
`docker pull rocker/rstudio`{.absolute style="color:#0085CA; font-size:35px; top:45%; left:45%; transform:rotate(-10deg);"}
`if(i=10) biasadj(i);`{.absolute style="color:#D97146; font-size:25px; top:60%; left:20%; transform:rotate(20deg);"}
`sum_new <- function(x,y){x+y}`{.absolute style="color:#D02C2F; font-size:18px; top:55%; left:75%; transform:rotate(15deg);"}
`function(x) x/12`{.absolute style="color:#76BC21; font-size:45px; top:40%; left:10%;"}
`chmod a+x file`{.absolute style="color:#D97146; font-size:30px; top:15%; left:77%;transform:rotate(20deg);"}
`install_github("pkg/pkgname")`{.absolute style="font-size:20px; top:18%; left:30%; transform:rotate(15deg);"}
`h3 {font-size: 25}`{.absolute style="color:#007582; font-size:30px; top:25%; left:50%;transform:rotate(-35deg);"}
`import numpy as np`{.absolute style="color:#D02C2F; font-size:35px; top:95%; left:37%;"}
`<div class="navbar">`{.absolute style="color:#D02C2F; font-size:20px; top:30%; left:70%;"}
`\bibliographystyle{JournalBiblio/cjfas}`{.absolute style="color:#007582; font-size:20px; top:32%; left:0%;transform:rotate(-15deg);"}
`<li><p>text</p></li>`{.absolute style="color:#007582; font-size:30px; top:18%; left:2%;"}
`echo "text"`{.absolute style="color:#0085CA; font-size:18px; top:75%; left:25%;"}



::: {.notes}
A lot of times out of necessity because there is no money to get someone to 
create tools, packages, programs, etc. for us, so we build it ourselves.
:::
